# LangGraph 0.6.6 Supervisor Configuration
# 부동산 AI 어시스턴트 범용 설정 파일

version: "0.6.6"

# ===== 메타데이터 =====
metadata:
  name: "RealEstate_Assistant"
  description: "부동산 전문 AI 어시스턴트 - 시세, 금융, 입지, 법률 상담"
  language: "ko"
  domain: "real_estate"
  created_by: "Holmes & Yangz System"
  created_date: "2025-01-10"
  version: "0.6.7"
  optimization_level: "enhanced"  # enhanced for detailed LLM context

# ===== 데이터 소스 설정 =====
data_sources:
  mock_database:
    type: "json_files"
    base_path: "database/mockup"
    files:
      laws: "real_estate_laws.json"
      dictionary: "real_estate_dictionary.json"
      faqs: "real_estate_faqs.json"
      policies: "subscription_policies.json"
      area_info: "area_info.json"
      transit: "transit_accessibility.json"
      transactions: "transaction_history.json"
      loans: "loan_info.json"
      benefits: "subscription_benefits.json"
      statistics: "subscription_statistics.json"
    cache_ttl: 3600
    
  api_endpoints:
    base_url: "http://localhost:8000/api/v1"
    timeout: 30
    retry_count: 3

# ===== 워크플로우 시퀀스 정의 =====
workflow_sequences:
  default:
    stages:
      - id: "analyzing"
        name: "질의 분석"
        description: "사용자 의도 파악 및 엔티티 추출"
        duration_estimate: 2
      - id: "planning"
        name: "계획 수립"
        description: "실행할 에이전트 선택 및 순서 결정"
        duration_estimate: 3
      - id: "executing"
        name: "실행"
        description: "선택된 에이전트들 실행"
        duration_estimate: 10
      - id: "completed"
        name: "완료"
        description: "결과 통합 및 응답 생성"
        duration_estimate: 2

# ===== 질의 분석 규칙 =====
query_analyzer:
  # 의도 감지 규칙
  intent_detection:
    - intent: "information_search"
      description: "정보 검색 및 조회 요청"
      keywords: 
        - "찾아"
        - "알려"
        - "검색"
        - "조회"
        - "확인"
        - "어떤"
        - "뭐가"
      examples:
        - "강남구 아파트 시세를 찾아줘"
        - "대출 정보를 알려줘"
        - "이 지역 학군을 확인해줘"
      confidence_threshold: 0.7
    
    - intent: "calculation"
      description: "계산, 분석, 비교 요청"
      keywords:
        - "계산"
        - "분석"
        - "비교"
        - "평가"
        - "산출"
        - "얼마"
      examples:
        - "월 소득 500만원으로 가능한 대출 계산해줘"
        - "두 매물을 비교 분석해줘"
        - "취득세 얼마나 나올까?"
      confidence_threshold: 0.75
    
    - intent: "recommendation"
      description: "추천 및 제안 요청"
      keywords:
        - "추천"
        - "제안"
        - "좋은"
        - "적합한"
        - "어울리는"
        - "베스트"
      examples:
        - "신혼부부에게 좋은 지역 추천해줘"
        - "투자하기 좋은 매물 제안해줘"
        - "예산에 맞는 아파트 추천"
      confidence_threshold: 0.7
    
    - intent: "consultation"
      description: "상담 및 조언 요청"
      keywords:
        - "상담"
        - "조언"
        - "도움"
        - "어떻게"
        - "방법"
        - "절차"
      examples:
        - "첫 주택 구매 절차를 알려줘"
        - "전세 계약 시 주의사항은?"
        - "대출 상담 받고 싶어"
      confidence_threshold: 0.65

  # 엔티티 추출 규칙
  entity_extraction:
    location:
      patterns:
        - "\\b(서울|부산|대구|인천|광주|대전|울산|세종|경기|강원|충북|충남|전북|전남|경북|경남|제주)\\b"
        - "\\b\\w+구\\b"
        - "\\b\\w+동\\b"
        - "\\b\\w+역\\b"
      examples: ["강남구", "서초동", "강남역"]
    
    price:
      patterns:
        - "\\d+억"
        - "\\d+천"
        - "\\d+만원"
      examples: ["5억", "3천만원", "월세 100만원"]
    
    property_type:
      keywords: ["아파트", "빌라", "오피스텔", "단독주택", "다세대", "원룸", "투룸"]
    
    transaction_type:
      keywords: ["매매", "전세", "월세", "반전세"]
    
    area:
      patterns:
        - "\\d+평"
        - "\\d+㎡"
        - "\\d+평형"
      examples: ["30평", "84㎡", "25평형"]

# ===== 에이전트 정의 =====
agents:
  # 시세 검색 전문가
  - id: "price_search_agent"
    name: "시세 검색 전문가"
    description: |
      이 에이전트는 부동산 시세와 관련된 모든 정보를 전문적으로 처리합니다.
      주요 기능:
      1. 실거래가 조회: 아파트, 빌라, 오피스텔, 단독주택의 최근 거래 가격
      2. 전월세 시세: 전세, 월세, 반전세 가격 정보 및 전세가율 분석
      3. 시세 동향: 과거 대비 가격 변동률, 상승/하락 추세 분석
      4. 지역 비교: 동일 평형대, 동일 지역 내 단지별 가격 비교
      5. 가격 계산: 평당가, 제곱미터당 가격, 전세가율 등 계산
      
      데이터 출처: 국토교통부 실거래가, 한국부동산원 통계, Mock 거래 데이터
      데이터 범위: 2019년 ~ 2024년 (최근 5년)
      업데이트 주기: 월 1회 (실제 서비스에서는 일일 업데이트)
    
    capabilities:
      - "아파트/빌라/오피스텔/단독주택 실거래가 조회"
      - "전세/월세/반전세 시세 분석"
      - "최근 5년간 시세 동향 분석"
      - "지역별, 평형별, 단지별 가격 비교"
      - "평당/㎡당 가격 계산"
      - "전세가율, 월세 수익률 계산"
      - "시장 과열/침체 지표 분석"
    trigger_conditions:
      keywords:
        - "시세"
        - "가격"
        - "매매가"
        - "전세"
        - "월세"
        - "실거래가"
        - "얼마"
      intents: 
        - "information_search"
        - "calculation"
        - "comparison"
      entities: 
        - "price"
        - "property_type"
        - "transaction_type"
        - "location"
    tools:
      - "search_real_estate_price"
      - "analyze_price_trend"
      - "compare_prices"
      - "calculate_price_per_area"
    max_execution_time: 30
    retry_policy:
      max_retries: 3
      backoff: "exponential"
      initial_delay: 1
    priority: 1

  # 자본 관리 전문가
  - id: "finance_agent"
    name: "자본 관리 전문가"
    
    # 간단 설명
    brief: "대출, 예산, 세금 등 부동산 금융 전문 상담"
    
    # 상세 설명
    detailed_description: |
      부동산 구매와 관련된 모든 금융 문제를 전문적으로 다룹니다.
      주요 기능:
      1. 대출 상담: DTI, LTV, DSR 기준 대출 한도 계산
      2. 상환 계획: 원리금균등/원금균등 상환 시뮬레이션
      3. 예산 분석: 가용 자금으로 구매 가능한 매물 검색
      4. 금리 비교: 은행별, 상품별 대출 금리 비교
      5. 세금 계산: 취득세, 재산세, 양도세 계산
      6. 투자 분석: 수익률, 손익분기점, 갭투자 가능성 분석
      
      고려 요소: 소득, 신용등급, 기존 대출, 주택 보유 수, 규제 지역 여부
      데이터: 시중 은행 금리, 정부 대출 규제, 세금 정책
    
    # 능력과 한계  
    capabilities:
      can_do:
        - "DTI, LTV, DSR 기준 대출 한도 정확 계산"
        - "원리금균등/원금균등 상환액 시뮬레이션"
        - "주택담보대출, 전세자금대출 상담"
        - "취득세, 재산세, 종부세 계산"
        - "양도세 비과세 요건 확인"
        - "월 소득 대비 적정 대출 규모 제안"
        - "갭투자 리스크 분석"
        - "임대 수익률 계산"
        
      cannot_do:
        - "개인 신용등급 조회"
        - "실제 대출 승인 (은행 심사 필요)"
        - "탈세 방법 조언"
        - "불법 자금 조달 방법"
        - "특정 은행 상품 판매"
    trigger_conditions:
      intents:
        - "calculation"
        - "consultation"
        - "recommendation"
      entities:
        - "loan"
        - "budget"
        - "income"
        - "tax"
      keywords:
        - "대출"
        - "예산"
        - "자금"
        - "이자"
        - "상환"
        - "DTI"
        - "LTV"
        - "DSR"
        - "금리"
        - "한도"
        - "월급"
        - "소득"
    tools:
      - "calculate_loan_limit"
      - "simulate_monthly_payment"
      - "find_properties_by_budget"
      - "compare_interest_rates"
      - "calculate_taxes"
    max_execution_time: 45
    retry_policy:
      max_retries: 3
      backoff: "exponential"
    priority: 2

  # 입지 분석 전문가
  - id: "location_agent"
    name: "입지 분석 전문가"
    
    # 간단 설명
    brief: "위치 기반 인프라, 교통, 학군 정보 분석"
    
    # 상세 설명
    detailed_description: |
      부동산의 입지와 관련된 모든 정보를 종합적으로 분석합니다.
      주요 기능:
      1. 교통: 지하철역, 버스정류장 접근성, 출퇴근 시간 계산
      2. 교육: 학군, 학교 배정, 학원가 정보
      3. 생활: 마트, 병원, 은행, 공원 등 편의시설
      4. 환경: 소음, 일조권, 조망권, 혐오시설 여부
      5. 발전성: 개발 계획, 교통 확충, 지역 성장 가능성
      
      분석 방법: GIS 기반 거리 계산, 도보/차량 이동 시간 측정
      데이터: 교통 인프라, 교육청 학군 정보, 도시계획 정보
    
    # 능력과 한계
    capabilities:
      can_do:
        - "역세권 여부 판단 (도보 10분 이내)"
        - "초중고 학군 정보 및 배정 학교"
        - "대형마트, 병원, 은행 접근성 평가"
        - "직장까지 대중교통 경로 및 시간"
        - "주변 공원, 하천, 산책로 정보"
        - "버스, 지하철 노선 정보"
        - "주요 대학까지 거리"
        - "혐오시설 존재 여부"
        
      cannot_do:
        - "실시간 교통 상황"
        - "특정 학원 수강료"
        - "미확정 개발 계획"
        - "개인 차량 주차 가능 여부"
        - "층간 소음 정도"
    trigger_conditions:
      intents:
        - "information_search"
        - "recommendation"
        - "calculation"
      entities:
        - "location"
        - "infrastructure"
        - "distance"
      keywords:
        - "역세권"
        - "학군"
        - "학교"
        - "지하철"
        - "버스"
        - "마트"
        - "병원"
        - "공원"
        - "거리"
        - "도보"
        - "통근"
        - "교통"
        - "편의시설"
    tools:
      - "search_nearby_facilities"
      - "calculate_distance"
      - "evaluate_accessibility"
      - "analyze_school_district"
      - "find_transportation"
    max_execution_time: 30
    retry_policy:
      max_retries: 2
      backoff: "linear"
    priority: 3

  # 법률 자문 전문가
  - id: "legal_agent"
    name: "법률 자문 전문가"
    
    # 간단 설명
    brief: "부동산 법률, 계약, 세금, 규제 전문 상담"
    
    # 상세 설명
    detailed_description: |
      부동산 거래와 관련된 모든 법적 사항을 전문적으로 안내합니다.
      주요 기능:
      1. 계약: 매매/임대차 계약서 검토, 특약사항 제안
      2. 법률: 주택임대차보호법, 부동산거래신고법 안내
      3. 세금: 취득세, 양도세 요건 및 절세 방법
      4. 규제: 대출 규제, 청약 자격, 전매 제한
      5. 분쟁: 보증금 반환, 하자 보수, 계약 해지
      6. 재개발: 조합원 자격, 분담금, 이주 대책
      
      근거 법령: 민법, 주택임대차보호법, 부동산거래신고법, 지방세법
      주의: 법률 정보 제공만 가능, 실제 소송 대리 불가
    
    # 능력과 한계
    capabilities:
      can_do:
        - "매매/임대차 계약서 주요 조항 설명"
        - "취득세, 재산세, 종부세 계산"
        - "양도세 비과세 요건 확인"
        - "임차인 권리 보호 방법 안내"
        - "전입신고, 확정일자 중요성 설명"
        - "보증금 반환 절차 안내"
        - "청약 자격 요건 확인"
        - "재개발/재건축 절차 설명"
        - "부동산 거래 신고 의무 안내"
        
      cannot_do:
        - "실제 법적 대리"
        - "구체적 소송 전략"
        - "탈법 방법 조언"
        - "개별 사건 법적 판단"
        - "공인중개사 업무 대행"
    trigger_conditions:
      intents:
        - "information_search"
        - "consultation"
      entities:
        - "law"
        - "contract"
        - "tax"
        - "regulation"
      keywords:
        - "계약"
        - "법률"
        - "세금"
        - "취득세"
        - "양도세"
        - "규정"
        - "임대차"
        - "보증금"
        - "중개수수료"
        - "등기"
        - "권리"
        - "의무"
        - "재개발"
        - "재건축"
    tools:
      - "explain_contract_terms"
      - "calculate_acquisition_tax"
      - "check_legal_requirements"
      - "provide_legal_guidelines"
    max_execution_time: 40
    retry_policy:
      max_retries: 2
      backoff: "constant"
    priority: 4

# ===== 에이전트 간 의존성 및 협업 규칙 =====
agent_coordination:
  dependencies:
    finance_agent:
      requires_from:
        price_search_agent: ["property_price", "market_value"]
      provides_to:
        legal_agent: ["loan_amount", "tax_calculations"]
        
    legal_agent:
      requires_from:
        price_search_agent: ["transaction_type", "property_value"]
        finance_agent: ["buyer_status", "loan_details"]
      provides_to:
        response_generator: ["legal_validation", "warnings"]
        
  collaboration_patterns:
    - name: "주택 구매 종합 상담"
      agents_sequence:
        - price_search_agent  # 시세 확인
        - finance_agent      # 대출 가능 금액
        - location_agent     # 입지 분석 (병렬 가능)
        - legal_agent       # 법적 검토
      parallel_groups:
        - [price_search_agent, location_agent]
        - [finance_agent]
        - [legal_agent]
        
    - name: "투자 수익성 분석"
      agents_sequence:
        - price_search_agent  # 매매가, 전세가
        - finance_agent      # 대출, 수익률
        - legal_agent       # 세금, 규제

# ===== 라우팅 규칙 =====
routing:
  # 라우팅 전략
  strategy: "hybrid"  # confidence_based + rule_based
  
  # 라우팅 규칙
  rules:
    - name: "복합 질의 처리"
      description: "여러 도메인에 걸친 질의를 병렬 처리"
      condition: "multiple_intents_detected"
      action: "parallel_execution"
      agents: ["dynamic"]  # 동적으로 선택
      max_agents: 3
      example_queries:
        - "강남 아파트 시세랑 대출 가능 금액 알려줘"
        - "이 지역 학군이랑 교통은 어때? 가격은?"
    
    - name: "단순 질의 처리"
      description: "단일 도메인 질의를 직접 라우팅"
      condition: "single_intent_detected"
      action: "direct_routing"
      agent_selection: "by_confidence_score"
      min_confidence: 0.7
    
    - name: "불명확한 질의"
      description: "의도가 불명확한 경우 추가 정보 요청"
      condition: "low_confidence"
      action: "clarification_request"
      fallback_agent: "analyzer_agent"
      clarification_prompts:
        missing_location: "어느 지역의 정보를 원하시나요?"
        missing_property_type: "아파트, 빌라, 오피스텔 중 어떤 것을 찾으시나요?"
        missing_transaction_type: "매매, 전세, 월세 중 어떤 거래를 원하시나요?"
        general: "좀 더 구체적으로 말씀해 주시겠어요?"
    
    - name: "긴급 처리"
      description: "시간 민감한 요청 우선 처리"
      condition: "urgent_request"
      action: "priority_execution"
      priority_boost: 10

  # 병렬 실행 설정
  parallel_execution:
    enabled: true
    max_concurrent_agents: 3
    timeout: 60
    merge_strategy: "confidence_weighted"  # first_complete, all_complete, confidence_weighted
  
  # 순차 실행 설정
  sequential_execution:
    enabled: true
    order: "by_dependency"  # by_priority, by_dependency, by_confidence
    pass_results: true  # 이전 결과를 다음 에이전트에 전달

# ===== 실행 정책 =====
execution_policies:
  # 에러 처리
  error_handling:
    on_agent_failure:
      strategy: "fallback"  # retry, fallback, abort, continue
      fallback_message: "죄송합니다. 해당 정보를 처리하는 중 문제가 발생했습니다. 다른 방법으로 시도하겠습니다."
      max_retries: 3
      retry_delay: 2
    
    on_timeout:
      strategy: "partial_result"  # partial_result, abort, extend
      timeout_message: "처리 시간이 초과되어 일부 결과만 제공합니다."
      extension_time: 30
    
    on_rate_limit:
      strategy: "exponential_backoff"
      initial_delay: 1
      max_delay: 60
      max_attempts: 5
  
  # 재시도 정책
  retry_policies:
    default:
      max_retries: 3
      backoff: "exponential"
      initial_delay: 1
      max_delay: 30
    
    network_error:
      max_retries: 5
      backoff: "linear"
      delay: 2
    
    api_error:
      max_retries: 2
      backoff: "constant"
      delay: 5

# ===== 응답 생성 =====
response_generation:
  # 응답 형식
  format: "structured"  # structured, natural, mixed
  include_confidence: true
  include_sources: true
  include_execution_time: false
  max_length: 2000
  
  # 응답 템플릿
  templates:
    greeting: |
      안녕하세요! 부동산 AI 어시스턴트입니다.
      시세 검색, 대출 상담, 입지 분석, 법률 자문 등을 도와드립니다.
      무엇을 도와드릴까요?
    
    clarification: |
      좀 더 구체적으로 말씀해 주시겠어요?
      예를 들어: {examples}
    
    processing: |
      {query}에 대해 분석 중입니다...
    
    result: |
      [{agent_name}의 분석 결과]
      
      {content}
      
      신뢰도: {confidence}%
      {sources}
    
    error: |
      죄송합니다. 요청을 처리하는 중 문제가 발생했습니다.
      {error_message}
      다시 시도하시거나 다른 방식으로 질문해 주세요.
    
    multi_agent_result: |
      종합 분석 결과입니다:
      
      {combined_results}
      
      추가로 궁금하신 점이 있으시면 말씀해 주세요.

# ===== 모니터링 설정 =====
monitoring:
  # 수집할 메트릭
  metrics:
    - "response_time"
    - "agent_execution_time"
    - "error_rate"
    - "user_satisfaction"
    - "cache_hit_rate"
    - "token_usage"
  
  # 로깅 설정
  logging:
    level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
    include_user_query: true
    include_agent_decisions: true
    include_tool_calls: true
    log_file: "logs/assistant.log"
    max_file_size: "100MB"
    backup_count: 5
  
  # 트레이싱 설정
  tracing:
    enabled: true
    provider: "langsmith"
    project_name: "real-estate-assistant"
    sample_rate: 1.0
    include_prompt: true
    include_response: true

# ===== 성능 최적화 =====
optimization:
  # 캐싱 설정
  caching:
    enabled: true
    provider: "memory"  # memory for development, redis for production
    ttl: 3600  # 1시간
    cache_similar_queries: true
    similarity_threshold: 0.95
    max_cache_size: "1GB"
    cache_strategies:
      price_data:
        ttl: 300  # 5분 (시세는 자주 변경)
      location_data:
        ttl: 86400  # 24시간 (입지 정보는 거의 불변)
      legal_info:
        ttl: 604800  # 7일 (법률 정보는 주기적 업데이트)
  
  # 레이트 리미팅
  rate_limiting:
    enabled: true
    requests_per_minute: 60
    requests_per_hour: 1000
    burst_size: 10
    by_user: true
  
  # 배치 처리
  batching:
    enabled: false
    max_batch_size: 10
    batch_timeout: 5
  
  # 모델 설정
  model_config:
    default_model: "gpt-4"
    fallback_model: "gpt-3.5-turbo"
    temperature: 0.7
    max_tokens: 2000
    streaming: true

# ===== 보안 설정 =====
security:
  # 입력 검증
  input_validation:
    enabled: true
    max_query_length: 1000
    sanitize_html: true
    block_patterns:
      - "(?i)(drop|delete|truncate)\\s+table"
      - "(?i)<script.*?</script>"
    
  # API 키 관리
  api_keys:
    rotation_enabled: true
    rotation_interval: 30  # days
    encryption: "AES256"
  
  # 사용자 인증
  authentication:
    required: false
    method: "jwt"  # jwt, oauth, api_key
    session_timeout: 3600
# LangGraph 0.6.6 Supervisor Configuration
# 부동산 AI 어시스턴트 범용 설정 파일

version: "0.6.6"

# ===== 메타데이터 =====
metadata:
  name: "RealEstate_Assistant"
  description: "부동산 전문 AI 어시스턴트 - 시세, 금융, 입지, 법률 상담"
  language: "ko"
  domain: "real_estate"
  created_by: "Holmes & Yangz System"
  created_date: "2025-01-10"

# ===== 질의 분석 규칙 =====
query_analyzer:
  # 의도 감지 규칙
  intent_detection:
    - intent: "information_search"
      description: "정보 검색 및 조회 요청"
      keywords: 
        - "찾아"
        - "알려"
        - "검색"
        - "조회"
        - "확인"
        - "어떤"
        - "뭐가"
      examples:
        - "강남구 아파트 시세를 찾아줘"
        - "대출 정보를 알려줘"
        - "이 지역 학군을 확인해줘"
      confidence_threshold: 0.7
    
    - intent: "calculation"
      description: "계산, 분석, 비교 요청"
      keywords:
        - "계산"
        - "분석"
        - "비교"
        - "평가"
        - "산출"
        - "얼마"
      examples:
        - "월 소득 500만원으로 가능한 대출 계산해줘"
        - "두 매물을 비교 분석해줘"
        - "취득세 얼마나 나올까?"
      confidence_threshold: 0.75
    
    - intent: "recommendation"
      description: "추천 및 제안 요청"
      keywords:
        - "추천"
        - "제안"
        - "좋은"
        - "적합한"
        - "어울리는"
        - "베스트"
      examples:
        - "신혼부부에게 좋은 지역 추천해줘"
        - "투자하기 좋은 매물 제안해줘"
        - "예산에 맞는 아파트 추천"
      confidence_threshold: 0.7
    
    - intent: "consultation"
      description: "상담 및 조언 요청"
      keywords:
        - "상담"
        - "조언"
        - "도움"
        - "어떻게"
        - "방법"
        - "절차"
      examples:
        - "첫 주택 구매 절차를 알려줘"
        - "전세 계약 시 주의사항은?"
        - "대출 상담 받고 싶어"
      confidence_threshold: 0.65

  # 엔티티 추출 규칙
  entity_extraction:
    location:
      patterns:
        - "\\b(서울|부산|대구|인천|광주|대전|울산|세종|경기|강원|충북|충남|전북|전남|경북|경남|제주)\\b"
        - "\\b\\w+구\\b"
        - "\\b\\w+동\\b"
        - "\\b\\w+역\\b"
      examples: ["강남구", "서초동", "강남역"]
    
    price:
      patterns:
        - "\\d+억"
        - "\\d+천"
        - "\\d+만원"
      examples: ["5억", "3천만원", "월세 100만원"]
    
    property_type:
      keywords: ["아파트", "빌라", "오피스텔", "단독주택", "다세대", "원룸", "투룸"]
    
    transaction_type:
      keywords: ["매매", "전세", "월세", "반전세"]
    
    area:
      patterns:
        - "\\d+평"
        - "\\d+㎡"
        - "\\d+평형"
      examples: ["30평", "84㎡", "25평형"]

# ===== 에이전트 정의 =====
agents:
  # 시세 검색 전문가
  - id: "price_search_agent"
    name: "시세 검색 전문가"
    description: "부동산 시세 정보를 검색하고 분석합니다"
    capabilities:
      - "아파트/빌라/오피스텔 실거래가 조회"
      - "전세/월세 시세 분석"
      - "시세 동향 및 예측"
      - "지역별 가격 비교"
      - "평당/㎡당 가격 계산"
    trigger_conditions:
      intents: 
        - "information_search"
        - "calculation"
        - "recommendation"
      entities: 
        - "price"
        - "property_type"
        - "transaction_type"
      keywords:
        - "시세"
        - "가격"
        - "매매가"
        - "전세"
        - "월세"
        - "실거래가"
        - "호가"
        - "시장가"
        - "평당가"
    tools:
      - "search_real_estate_price"
      - "analyze_price_trend"
      - "compare_prices"
      - "calculate_price_per_area"
    max_execution_time: 30
    retry_policy:
      max_retries: 3
      backoff: "exponential"
      initial_delay: 1
    priority: 1

  # 자본 관리 전문가
  - id: "finance_agent"
    name: "자본 관리 전문가"
    description: "대출, 예산 등 금융 관련 상담을 제공합니다"
    capabilities:
      - "대출 한도 계산 (DTI/LTV/DSR)"
      - "월 상환액 시뮬레이션"
      - "예산별 매물 추천"
      - "금리 비교 분석"
      - "세금 계산 (취득세, 재산세)"
      - "투자 수익률 분석"
    trigger_conditions:
      intents:
        - "calculation"
        - "consultation"
        - "recommendation"
      entities:
        - "loan"
        - "budget"
        - "income"
        - "tax"
      keywords:
        - "대출"
        - "예산"
        - "자금"
        - "이자"
        - "상환"
        - "DTI"
        - "LTV"
        - "DSR"
        - "금리"
        - "한도"
        - "월급"
        - "소득"
    tools:
      - "calculate_loan_limit"
      - "simulate_monthly_payment"
      - "find_properties_by_budget"
      - "compare_interest_rates"
      - "calculate_taxes"
    max_execution_time: 45
    retry_policy:
      max_retries: 3
      backoff: "exponential"
    priority: 2

  # 입지 분석 전문가
  - id: "location_agent"
    name: "입지 분석 전문가"
    description: "위치 기반 정보와 인프라 접근성을 분석합니다"
    capabilities:
      - "교통 접근성 분석 (지하철, 버스)"
      - "학군 정보 제공"
      - "생활 인프라 평가"
      - "주변 편의시설 검색"
      - "직장 통근 거리 계산"
      - "지역 발전 가능성 분석"
    trigger_conditions:
      intents:
        - "information_search"
        - "recommendation"
        - "calculation"
      entities:
        - "location"
        - "infrastructure"
        - "distance"
      keywords:
        - "역세권"
        - "학군"
        - "학교"
        - "지하철"
        - "버스"
        - "마트"
        - "병원"
        - "공원"
        - "거리"
        - "도보"
        - "통근"
        - "교통"
        - "편의시설"
    tools:
      - "search_nearby_facilities"
      - "calculate_distance"
      - "evaluate_accessibility"
      - "analyze_school_district"
      - "find_transportation"
    max_execution_time: 30
    retry_policy:
      max_retries: 2
      backoff: "linear"
    priority: 3

  # 법률 자문 전문가
  - id: "legal_agent"
    name: "법률 자문 전문가"
    description: "부동산 관련 법률 및 규정 정보를 제공합니다"
    capabilities:
      - "계약서 주요 사항 설명"
      - "세금 계산 및 안내"
      - "법적 주의사항 안내"
      - "임대차보호법 상담"
      - "분양권/입주권 관련 규정"
      - "재개발/재건축 정보"
    trigger_conditions:
      intents:
        - "information_search"
        - "consultation"
      entities:
        - "law"
        - "contract"
        - "tax"
        - "regulation"
      keywords:
        - "계약"
        - "법률"
        - "세금"
        - "취득세"
        - "양도세"
        - "규정"
        - "임대차"
        - "보증금"
        - "중개수수료"
        - "등기"
        - "권리"
        - "의무"
        - "재개발"
        - "재건축"
    tools:
      - "explain_contract_terms"
      - "calculate_acquisition_tax"
      - "check_legal_requirements"
      - "provide_legal_guidelines"
    max_execution_time: 40
    retry_policy:
      max_retries: 2
      backoff: "constant"
    priority: 4

# ===== 라우팅 규칙 =====
routing:
  # 라우팅 전략
  strategy: "confidence_based"  # confidence_based, rule_based, hybrid
  
  # 라우팅 규칙
  rules:
    - name: "복합 질의 처리"
      description: "여러 도메인에 걸친 질의를 병렬 처리"
      condition: "multiple_intents_detected"
      action: "parallel_execution"
      agents: ["dynamic"]  # 동적으로 선택
      max_agents: 3
    
    - name: "단순 질의 처리"
      description: "단일 도메인 질의를 직접 라우팅"
      condition: "single_intent_detected"
      action: "direct_routing"
      agent_selection: "by_confidence_score"
      min_confidence: 0.7
    
    - name: "불명확한 질의"
      description: "의도가 불명확한 경우 추가 정보 요청"
      condition: "low_confidence"
      action: "clarification_request"
      fallback_agent: "analyzer_agent"
      clarification_prompt: "좀 더 구체적으로 말씀해 주시겠어요?"
    
    - name: "긴급 처리"
      description: "시간 민감한 요청 우선 처리"
      condition: "urgent_request"
      action: "priority_execution"
      priority_boost: 10

  # 병렬 실행 설정
  parallel_execution:
    enabled: true
    max_concurrent_agents: 3
    timeout: 60
    merge_strategy: "confidence_weighted"  # first_complete, all_complete, confidence_weighted
  
  # 순차 실행 설정
  sequential_execution:
    enabled: true
    order: "by_dependency"  # by_priority, by_dependency, by_confidence
    pass_results: true  # 이전 결과를 다음 에이전트에 전달

# ===== 실행 정책 =====
execution_policies:
  # 에러 처리
  error_handling:
    on_agent_failure:
      strategy: "fallback"  # retry, fallback, abort, continue
      fallback_message: "죄송합니다. 해당 정보를 처리하는 중 문제가 발생했습니다. 다른 방법으로 시도하겠습니다."
      max_retries: 3
      retry_delay: 2
    
    on_timeout:
      strategy: "partial_result"  # partial_result, abort, extend
      timeout_message: "처리 시간이 초과되어 일부 결과만 제공합니다."
      extension_time: 30
    
    on_rate_limit:
      strategy: "exponential_backoff"
      initial_delay: 1
      max_delay: 60
      max_attempts: 5
  
  # 재시도 정책
  retry_policies:
    default:
      max_retries: 3
      backoff: "exponential"
      initial_delay: 1
      max_delay: 30
    
    network_error:
      max_retries: 5
      backoff: "linear"
      delay: 2
    
    api_error:
      max_retries: 2
      backoff: "constant"
      delay: 5

# ===== 응답 생성 =====
response_generation:
  # 응답 형식
  format: "structured"  # structured, natural, mixed
  include_confidence: true
  include_sources: true
  include_execution_time: false
  max_length: 2000
  
  # 응답 템플릿
  templates:
    greeting: |
      안녕하세요! 부동산 AI 어시스턴트입니다.
      시세 검색, 대출 상담, 입지 분석, 법률 자문 등을 도와드립니다.
      무엇을 도와드릴까요?
    
    clarification: |
      좀 더 구체적으로 말씀해 주시겠어요?
      예를 들어: {examples}
    
    processing: |
      {query}에 대해 분석 중입니다...
    
    result: |
      [{agent_name}의 분석 결과]
      
      {content}
      
      신뢰도: {confidence}%
      {sources}
    
    error: |
      죄송합니다. 요청을 처리하는 중 문제가 발생했습니다.
      {error_message}
      다시 시도하시거나 다른 방식으로 질문해 주세요.
    
    multi_agent_result: |
      종합 분석 결과입니다:
      
      {combined_results}
      
      추가로 궁금하신 점이 있으시면 말씀해 주세요.

# ===== 모니터링 설정 =====
monitoring:
  # 수집할 메트릭
  metrics:
    - "response_time"
    - "agent_execution_time"
    - "error_rate"
    - "user_satisfaction"
    - "cache_hit_rate"
    - "token_usage"
  
  # 로깅 설정
  logging:
    level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
    include_user_query: true
    include_agent_decisions: true
    include_tool_calls: true
    log_file: "logs/assistant.log"
    max_file_size: "100MB"
    backup_count: 5
  
  # 트레이싱 설정
  tracing:
    enabled: true
    provider: "langsmith"
    project_name: "real-estate-assistant"
    sample_rate: 1.0
    include_prompt: true
    include_response: true

# ===== 성능 최적화 =====
optimization:
  # 캐싱 설정
  caching:
    enabled: true
    provider: "redis"  # memory, redis, memcached
    ttl: 3600  # 1시간
    cache_similar_queries: true
    similarity_threshold: 0.95
    max_cache_size: "1GB"
  
  # 레이트 리미팅
  rate_limiting:
    enabled: true
    requests_per_minute: 60
    requests_per_hour: 1000
    burst_size: 10
    by_user: true
  
  # 배치 처리
  batching:
    enabled: false
    max_batch_size: 10
    batch_timeout: 5
  
  # 모델 설정
  model_config:
    default_model: "gpt-4"
    fallback_model: "gpt-3.5-turbo"
    temperature: 0.7
    max_tokens: 2000
    streaming: true

# ===== 보안 설정 =====
security:
  # 입력 검증
  input_validation:
    enabled: true
    max_query_length: 1000
    sanitize_html: true
    block_patterns:
      - "(?i)(drop|delete|truncate)\\s+table"
      - "(?i)<script.*?</script>"
    
  # API 키 관리
  api_keys:
    rotation_enabled: true
    rotation_interval: 30  # days
    encryption: "AES256"
  
  # 사용자 인증
  authentication:
    required: false
    method: "jwt"  # jwt, oauth, api_key
    session_timeout: 3600
{
  "permissions": {
    "allow": [
      "Bash(../../../venv/Scripts/python:*)",
      "Bash(python -c \"import json; data=json.load(open(''test_queries_100.json'', encoding=''utf-8'')); print(f''Total: {data[\"\"total\"\"]}''); print(f''Queries: {len(data[\"\"queries\"\"])}'')\")",
      "Bash(python:*)",
      "Bash(tree:*)",
      "Bash(dir:*)",
      "Bash(findstr:*)",
      "Bash(mkdir:*)",
      "Bash(timeout:*)",
      "Bash(move:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(venv/Scripts/python:*)",
      "Bash(taskkill:*)",
      "Bash(tee:*)",
      "Bash(venv\\Scripts\\python:*)",
      "Bash(cat:*)",
      "Bash(sqlite3:*)",
      "Bash(venvScriptspython backendappservice_agentteststest_status_tracking.py)",
      "Bash(npx tsc:*)",
      "Bash(git checkout:*)",
      "Bash(node -p \"const fs = require(''fs''); const code = fs.readFileSync(''components/chat-interface.tsx'', ''utf8''); try { require(''@babel/parser'').parse(code, { sourceType: ''module'', plugins: [''jsx'', ''typescript''] }); ''OK'' } catch(e) { e.message }\")",
      "Bash(sed:*)",
      "Bash(if [ -d \"node_modules/.cache\" ])",
      "Bash(then rm -rf node_modules/.cache)",
      "Bash(else echo \"No cache found\")",
      "Bash(fi)",
      "Bash(npm run dev:*)",
      "Bash(git check-ignore:*)",
      "Bash(npm run build:*)",
      "Bash(find:*)",
      "Bash(iconv:*)",
      "Bash(../venv/Scripts/python:*)",
      "Bash(psql:*)",
      "Bash(set PGPASSWORD=root1234)",
      "Bash(venvScriptspython create_memory_tables.py)",
      "Bash(if not exist \"llm_engineering\" mkdir llm_engineering)",
      "Bash(where psql)",
      "Bash(PGPASSWORD=root1234 psql:*)"
    ],
    "deny": [],
    "ask": []
  }
}
